@page "/collaborators"
@inject NavigationManager navigationManager
@inject LusiumService lusiumService
@rendermode InteractiveServer

<style>
    .page {
        font-family: Arial, Helvetica, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        width: 100vw;
        background-color: #1e352f;
    }

     .page.blurred {
        filter: blur(5px);
        pointer-events: none;
     }

    .popup-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .popup {
        background-color: #1e352f;
        color: #A6C36F;
        padding: 20px;
        border-radius: 10px;
        width: 300px;
        text-align: left;
        padding: 20px;
    }

    .popup h2 {
        margin-bottom: 20px;
    }

    ul {
        list-style: none;
        padding-left: 0;
    }

    li {
        cursor: default;
        user-select: none;
    }

    li.clickable-item {
        cursor: pointer;
    }

    li.clickable-item:hover {
        color: #A6C36F;
        text-decoration: underline;
    }
</style>

<div class="page blurred"></div>
<div class="popup-overlay">
    <div class="popup">
        <h2>Escolha uma Instituição</h2>
        <ul>
            @foreach (var institution in institutions)
            {
                <li @onclick="() => NavigateToCollaborators(institution.ID)" class="clickable-item">
                    @institution.Nome
                </li>
            }
        </ul>
    </div>
</div>

@code {
    private List<Instituition> institutions = new();

    protected override async Task OnInitializedAsync()
    {
        var res = await lusiumService.ListaInstituicoes();
        institutions = res.Select(item => item.Value).ToList();
    }

    private void NavigateToCollaborators(int institutionId)
    {
        navigationManager.NavigateTo($"/collaborators/{institutionId}");
    }
}
