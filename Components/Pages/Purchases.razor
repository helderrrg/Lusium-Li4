@page "/purchases"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Institution")]

<style>
    .page {
        font-family: Arial, Helvetica, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        width: 100vw;
        background-color: #1e352f;
    }
    .page.blurred {
        filter: blur(5px);
        pointer-events: none;
    }
    .content {
        width: 60%;
        display: flex;
        flex-direction: column;
    }
    .listing-header {
        font-weight: bold;
        color: #A6C36F;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        width: 100%;
        padding-right: 15px;
        padding-left: 125px;
    }
    .listing-cell {
        flex: 1;
        min-width: 100px;
        padding:  8px;
        text-align: left;
    }
    .listing-content {
        display: flex;
        flex-direction: column;
        gap: 0.3em;
    }
    .listing-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        border-radius: 5px;
        color: #A6C36F;
        transition: 0.2s;
        cursor: pointer;
    }

    .listing-item:hover {
        background-color: #A6C36F;
        color: #1e352f;
    }

    .popup-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .popup {
        background-color: #1e352f;
        color: #A6C36F;
        padding: 20px;
        border-radius: 10px;
        width: 300px;
        text-align: left;
        padding: 20px;
    }

    .popup h2 {
        margin-bottom: 20px;
    }
    

</style>

<PageTitle>Compras</PageTitle>

@if (purchasesList == null)
{
    <p><em>Loading...</em></p>
}
else if (purchasesList.Count == 0)
{
    <p style="color: #A6C36F; font-weight: bold;">Não foram encontradas compras efetuadas.</p>
}
else
{
    <div class="page @(isPopupVisible ? "blurred" : "")">
        <div class="content">
            <div class="listing-header">
                <div class="listing-cell">Nome</div>
                <div class="listing-cell">Data de compra</div>
                <div class="listing-cell">Endereço de entrega</div>
                <div class="listing-cell">Número da fatura</div>
            </div>
            <div class="listing-content">
                @foreach (var purchase in purchasesList)
                {
                    <div class="listing-item" @onclick="() => ShowPopup(purchase.Value)">
                        <img src="@purchase.Value.Produto?.ImagemAlusiva" alt="@purchase.Value.Produto?.Nome" height="90" width="90" style="margin-right: 20px;" />
                        <div class="listing-cell" style="font-weight: bold; font-size: 1.4em;">@purchase.Value.Produto?.Nome</div>
                        <div class="listing-cell">@purchase.Value.DataCompra</div>
                        <div class="listing-cell">@purchase.Value.EnderecoEntrega</div>
                        <div class="listing-cell">@purchase.Value.ProdutoAssociado</div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@if (isPopupVisible)
{
    <div class="popup-overlay" @onclick="ClosePopup">
        <div class="popup" @onclick:stopPropagation>
            <h2><strong>Compra Nº: </strong>@selectedPurchase?.ProdutoAssociado</h2>
            <p><strong>Produto: </strong>@selectedPurchase?.Produto?.Nome</p>
            <p><strong>Data de compra: </strong>@selectedPurchase?.DataCompra</p>
            <p><strong>Morada: </strong>@selectedPurchase?.EnderecoEntrega</p>
        </div>
    </div>
}

@code {
    private Dictionary<string, Purchase> purchasesList = new();
    private string filterText = string.Empty;
    private bool isPopupVisible = false;
    private Purchase? selectedPurchase;

    [Inject]
    public required LusiumService LusiumService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        string userID = string.Empty;
        string userRole = string.Empty;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            userID = user.FindFirst(ClaimTypes.NameIdentifier)?.Value!;
            userRole = user.FindFirst(ClaimTypes.Role)?.Value!;
        }
        else
        {
            navigationManager.NavigateTo("/login");
        }

        purchasesList = await LusiumService.ListaComprasEfetuadas(userID);

        foreach (var purchase in purchasesList)
        {
            purchase.Value.Produto = await LusiumService.ObterProduto(purchase.Value.ProdutoAssociado.ToString());
        }

        Console.WriteLine(purchasesList);
    }

    private void ShowPopup(Purchase purchase)
    {
        selectedPurchase = purchase;
        isPopupVisible = true;
    }

    private void ClosePopup()
    {
        isPopupVisible = false;
        selectedPurchase = null;
    }
}
