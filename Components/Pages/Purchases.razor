@page "/purchases"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Institution")]

<style>
    .page {
        font-family: Arial, Helvetica, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        width: 100vw;
        background-color: #1e352f;
    }
    .content {
        width: 60%;
        display: flex;
        flex-direction: column;
    }
    .listing-header {
        font-weight: bold;
        color: #A6C36F;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        width: 100%;
        padding-right: 15px;
        padding-left: 125px;
    }
    .listing-cell {
        flex: 1;
        min-width: 100px;
        padding:  8px;
        text-align: left;
    }
    .listing-content {
        display: flex;
        flex-direction: column;
        gap: 0.3em;
    }
    .listing-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        border-radius: 5px;
        color: #A6C36F;
        transition: 0.2s;
    }

    .listing-item:hover {
        background-color: #A6C36F;
        color: #1e352f;
    }
    
    .form-control {
        width: 120px;
    }

</style>

<PageTitle>Compras</PageTitle>

@if (purchasesList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="page">
        <div class="content">
            <div class="listing-header">
                <div class="listing-cell">Nome</div>
                <div class="listing-cell">Data de compra</div>
                <div class="listing-cell">Endereço de entrega</div>
                <div class="listing-cell">Número da fatura</div>
            </div>
            <div class="listing-content">
                @foreach (var purchase in purchasesList)
                {
                    <div class="listing-item">
                        <img src="@purchase.Value.Produto?.ImagemAlusiva" alt="@purchase.Value.Produto?.Nome" height="90" width="90" style="margin-right: 20px;" />
                        <div class="listing-cell" style="font-weight: bold; font-size: 1.4em;">@purchase.Value.Produto?.Nome</div>
                        <div class="listing-cell">@purchase.Value.DataCompra</div>
                        <div class="listing-cell">@purchase.Value.EnderecoEntrega</div>
                        <div class="listing-cell">@purchase.Value.ProdutoAssociado</div>
                    </div>
                }
            </div>
        </div>
    </div>


@*
    <table class="table">
        <thead>
            <tr>
                <th>Número da Fatura</th>
                <th>Data da Compra</th>
                <th>Endereço de Entrega</th>
                <th>Produto Associado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var purchase in purchasesList)
            {
                <tr>
                    <td>@purchase.Value.NumeroCompra</td>
                    <td>@purchase.Value.DataCompra</td>
                    <td>@purchase.Value.EnderecoEntrega</td>
                    <td>@purchase.Value.ProdutoAssociado</td>
                </tr>
            }
        </tbody>
    </table>
*@
}

@code {
    private Dictionary<string, Purchase> purchasesList = new();
    private string filterText = string.Empty;

    [Inject]
    public required LusiumService LusiumService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        string userID = string.Empty;
        string userRole = string.Empty;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            userID = user.FindFirst(ClaimTypes.NameIdentifier)?.Value!;
            userRole = user.FindFirst(ClaimTypes.Role)?.Value!;
        }
        else
        {
            navigationManager.NavigateTo("/login");
        }

        purchasesList = await LusiumService.ListaComprasEfetuadas(userID);

        foreach (var purchase in purchasesList)
        {
            purchase.Value.Produto = await LusiumService.ObterProduto(purchase.Value.ProdutoAssociado.ToString());
        }

        Console.WriteLine(purchasesList);
    }
}