@page "/login"

@using Data
@using Models.ViewModels
@using System.Net.Http.Json
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="col-lg-4">
        <EditForm Model="@Model" OnValidSubmit="AutenticarUtilizador" FormName="LoginForm">
            <DataAnnotationsValidator />
            <div class="text-center mb-4">
                <h2 class="fw-bold">Iniciar Sessão</h2>
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <InputText id="email" @bind-Value="Model.Email" class="form-control" placeholder="Email" />
                <ValidationMessage For="() => Model.Email" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Palavra-passe</label>
                <InputText id="password" @bind-Value="Model.Password" class="form-control" placeholder="Palavra-passe" type="password" />
                <ValidationMessage For="() => Model.Password" />
            </div>
            <div class="mb-3 text-center">
                <span class="text-danger">@errorMessage</span>
            </div>
            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg">Iniciar Sessão</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoginViewModel Model { get; set; } = new();
    private string errorMessage = string.Empty;

    private async Task AutenticarUtilizador()
    {
        var client = HttpClientFactory.CreateClient("api");
        var response = await client.PostAsJsonAsync("api/auth/login", Model);

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/", forceLoad: true);
        }
        else
        {
            errorMessage = "Email ou palavra-passe inválidos.";
        }
    }
}
