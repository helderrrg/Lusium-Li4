@page "/manuals"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Admin,Institution,Collaborator")]

<PageTitle>Manuais</PageTitle>
<style>
    .page {
        font-family: Arial, Helvetica, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        width: 100vw;
        background-color: #1e352f;
    }

    .content {
        width: 70%;
    }

    .product-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }

    .product-card {
        display: flex;
        flex-direction: column;
        align-items: left;
        justify-content: center;
        margin: 1em;
        padding: 1em;
    }

    .sub-title {
        font-size: 1.7em;
        color:#A6C36F;
    }

    .description {
        font-size: 1em;
        color:#A6C36F;
    }

    button {
        font-size: 1.3em;
        text-align: center;
        color: #1e352f;
        border: none;
        padding: 0.5em 0px;
        width: 13em;
        background-color: #A6C36F;
        border-radius: 5px;
        transition: transform 0.2s ease-in-out;
    }

    button:hover {
        transform: scale(1.1);
    }
    
</style>
<div class="page">
    <div class="content">
        @if (manualList == null)
            {
                <div class="sub-title">Loading...</div>
            }
            else
            {
                <div class="product-list">
                    @foreach (var manual in manualList)
                    {
                        <div class="product-card">
                            <div><img src="@manual.Value.Capa" alt="@manual.Value.Nome" width="100" /></div>
                            <div class="sub-title">@manual.Value.Nome</div>
                            <div class="description">@manual.Value.Descricao</div>
                            <button>Ver</button>
                        </div>
                    }
                </div>
            }
    </div>
</div>




@code {
    private Dictionary<string, Manual> manualList = new();

    [Inject]
    public required LusiumService LusiumService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        string userID = string.Empty;
        string userRole = string.Empty;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            userID = user.FindFirst(ClaimTypes.NameIdentifier)?.Value!;
            userRole = user.FindFirst(ClaimTypes.Role)?.Value!;
        } else {
            navigationManager.NavigateTo("/login");
        }

        manualList = await LusiumService.ListaManuais(userID, userRole);
    }
}