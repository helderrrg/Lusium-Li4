@inject LusiumService LusiumService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer

<style>
    .page {
        font-family: Arial, Helvetica, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        width: 100vw;
        background-color: #1e352f;
    }

    .content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: start;
        width: 800px;
    }

    .hero-title {
    }

    .main-title {
        font-weight: bold;
        font-size: 3.5em;
        color: #BEEF9E;
    }

    .form-group {
        width: 70%;
        display: flex;
        flex-direction: column;
        justify-content: start;
    }

    .top-text {
        color: #A6C36F;
        padding-left: 5px;
        font-size: 1em;
    }

    .pair {
        margin-top: 20px;
    }

    button {
        margin-top: 40px;
        font-size: 1em;
        text-align: center;
        color: #1e352f;
        border: none;
        padding: 0.5em 0px;
        width: 8em;
        background-color: #A6C36F;
        border-radius: 5px;
        transition: transform 0.2s ease-in-out;
    }

        button:hover {
            transform: scale(1.1);
        }

    .info-message-wrapper {
        margin-top: 4em;
        width: 80%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: left;
    }

    .failed-message {
        background-color: #ea6565;
        padding: 10px;
        border-radius: 5px;
        color: white;
    }

    .success-message {
        background-color: #A6C36F;
        padding: 10px;
        border-radius: 5px;
        color: white;
    }

</style>

<PageTitle>Editar Administrador</PageTitle>

<div class="page">
    <div class="content">
        <div class="hero-title">
            <h1 class="main-title"> Dados Administrador</h1>
        </div>
        <div class="form-group">
            <div>
                <div class="pair">
                    <label for="nome" class="top-text">Nome</label>
                    <input type="text" class="form-control" id="name" @bind="@userName" readonly />
                </div>
                <div class="pair">
                    <label for="password" class="top-text">Nova Palavra-passe</label>
                    <input type="password" class="form-control" id="password" @bind="password" />
                </div>
                <div class="pair">
                    <label for="confirmPassword" class="top-text">Confirmar Nova Palavra-passe</label>
                    <input type="password" class="form-control" id="confirmPassword" @bind="confirmPassword" />
                </div>
            </div>
            <div>
                <button @onclick="AlterarSenha">Alterar Dados</button>
            </div>
            @if (!string.IsNullOrEmpty(message))
            {
                <div class="info-message-wrapper">
                    <div class="info-message failed-message">@message</div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public required string userId { get; set; }
    [Parameter] public required string userName { get; set; }

    private string password { get; set; } = string.Empty;
    private string confirmPassword { get; set; } = string.Empty;
    private string message { get; set; } = string.Empty;

    private async Task AlterarSenha()
    {
        if (password != confirmPassword)
        {
            message = "As palavras-passe não coincidem.";
            return;
        }

        bool valid = false;

        try
        {
            valid = await LusiumService.ValidaNovosDadosAdministrador(userId, userName, password);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine(ex.Message);

            navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
        }

        if (valid)
        {
            try
            {
                await LusiumService.AtualizaDadosAdministrador(userId, userName, password);
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine(ex.Message);

                navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
            }
            
            message = "Senha alterada com sucesso.";

            try
            {
                await LusiumService.validateAdmin(userId);
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine(ex.Message);

                navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
            }

            navigationManager.NavigateTo("/login");
        }
        else
        {
            message = "Erro ao alterar senha.";
        }
    }
}